[general]
profile_img_url = https://github.githubassets.com/images/modules/site/integrators/google.png
resource_parser_url = https://fastly.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js
network_check_url = http://bing.com
server_check_url = http://www.gstatic.com/generate_204
server_check_user_agent = curl/8.10.1
server_check_timeout = 3000
doh_user_agent = curl/8.10.1
dns_exclusion_list = *.lan,*.local,*.localhost
dns_reject_domain_behavior = loopback
;ssid_suspended_list = Arch
;enhanced_compatibility_ssid_list = LINK_22E174, LINK_22E175
udp_whitelist =
udp_drop_list =
excluded_routes = 0.0.0.0/8,10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/3
icmp_auto_reply = false

[dns]
no-system
no-ipv6
;prefer-doh3
;circumvent-ipv4-answer =
;circumvent-ipv6-answer =
;server = 223.5.5.5
;server = 9.9.9.9
doh-server = https://223.5.5.5/dns-query
doh-server = https://9.9.9.9/dns-query
doh-server = /*.rustdesk/https://doh.pub/dns-query, excluded_ssids=SSID2


[policy]
;static = policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png
;available = policy-name-2, Sample-A, Sample-B, Sample-C
;round-robin = policy-name-3, Sample-A, Sample-B, Sample-C
;ssid = policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C
;static = policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available = policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin = policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example
;dest-hash = policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example
;url-latency-benchmark = policy-name-9, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, alive-checking=false, tolerance=0

static = 🇦🇷 AR


[server_remote]
example.org

[filter_remote]
FILTER_LAN, tag=LAN, force-policy=direct, enabled=true
FILTER_REGION, tag=CN, force-policy=direct, enabled=true
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/filter.snippet, tag=Sample, force-policy=your-policy-name, enabled=true
;https://example.com/filter.snippet, tag=Sample, force-policy=your-policy-name, require-devices=ID1, ID2, enabled=true

#
# Params tag and enabled are optional.
#
[rewrite_remote]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-import-rewrite.snippet, tag=Sample, enabled=true
;https://example.com/rewrite.snippet, tag=Sample, require-devices=ID1, ID2, enabled=true

#
# Only obfs=http, obfs=ws, obfs=wss can have optional obfs-uri field.
# The obfs-host param in wss will be used for TLS handshake and for HTTP header host field, if obfs-host is not set for wss the server address will be used.
# When using obfs=ws and obfs=wss the server side can be deployed by v2ray-plugin with mux = 0 or by v2ray-core or the trojan-go.
# It is worth noting that the udp-over-tcp for shadowsocks is only supported by the server deployed with shadowsocksr python version, other versions only support the UDP relay itself. If you are combing udp-relay and udp-over-tcp for shadowsocks you must be sure your server is deployed with shadowsocksr python version.
# It is worth noting that the obfs=tls is different from the obfs=over-tls. The obfs=tls is the obfuscation plugin related to shadowsocks project, it is just an obfuscation of the TLS protocol. The obfs=over-tls is the TLS protocol. Quantumult X supports both of them for shadowsocks.
# The obfs plugin tls1.2_ticket_auth has one more RTT than tls1.2_ticket_fastauth and obfs tls, you'd better use tls1.2_ticket_fastauth instead.
# The method chacha20-ietf-poly1305 and chacha20-poly1305 have the same effect in VMess configuration.
# The tls-cert-sha256 or tls-pubkey-sha256 used for SSL pinning can be generated by openssl using below commands:
# openssl x509 -noout -fingerprint -sha256 -inform pem -in your-cert.pem
# openssl x509 -inform pem -pubkey -noout < your-cert.pem | openssl pkey -pubin -outform der | openssl dgst -sha256
# If the tls-verification is false then the tls-cert-sha256 and tls-pubkey-sha256 will be ignored.
# If the tls-pubkey-sha256 is set then the tls-cert-sha256 will be ignored.
# The optional tls-alpn for TLS is hex format of the ALPN extension content, eg: 02:68:32:08:68:74:74:70:2f:31:2e:31 or 02683208687474702f312e31 represents ALPN h2 and http/1.1 ({2, 'h', '2', 8, 'h', 't', 't', 'p', '/', '1', '.', '1'})
# The tls-no-session-ticket param for TLS is optional, this is only for special use cases. By default session ticket is enabled (tls-no-session-ticket=false). If you want to disable sessioin ticket just set tls-no-session-ticket=true, keep in mind that the session may still be reused from session ID for new connection if server supports it.
# The tls-no-session-reuse param for TLS is optional, this is only for special use cases. By default session reuse is enabled (tls-no-session-reuse=false). If you want to disable sessioin reuse just set tls-no-session-reuse=true, this will force Quantumult X perform a full TLS handshake for every new connection.
# The tls13 param has been deprecated (deprecated since v1.0.26), and TLS version 1.3 is always supported no matter what you set.
# The obfs=http for shadowsocks protocol follows the shadowsocks project's simple-obfs plugin. The obfs=http for VMess protocol follows V2Ray's implementation. These 2 obfuscations are totally different. Sometimes to comply with your special server settings (「shadowsocks」 + 「http obfuscation of VMess」 or 「VMess」 + 「http obfuscation of shadowsocks」. The latter rarely happens, and the former happens when the server side deployed by V2Ray (or similar programs) with shadowsocks protocol and V2Ray built-in http obfuscation), you may set obfs=vemss-http for shadowsocks protocol, or obfs=shadowsocks-http for vmess protocol.
#
[server_local]
;shadowsocks=example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=ss-obfs-http-01
;shadowsocks=example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, tag=ss-obfs-http-02
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=tls, obfs-host=bing.com, fast-open=false, udp-relay=false, tag=ss-obfs-tls-01
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=over-tls, obfs-host=bing.com, tls-verification=true, tls-cert-sha256=b0088370d6c8e02d6e38c443abf81be2aaf1e18f00435aaf0b39852c338f7aaa, fast-open=false, udp-relay=false, tag=ss-tls-01
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=over-tls, obfs-host=bing.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=ss-tls-02
;shadowsocks=example.com:443, method=chacha20, password=pwd, obfs=over-tls, obfs-host=bing.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls-alpn=02683208687474702f312e31, fast-open=false, udp-relay=false, tag=ss-tls-03
;shadowsocks=example.com:443, method=chacha20, password=pwd, ssr-protocol=auth_chain_b, ssr-protocol-param=def, obfs=tls1.2_ticket_fastauth, obfs-host=bing.com, tag=ssr
;shadowsocks=example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, fast-open=false, udp-relay=false, tag=ss-ws-01
;shadowsocks=example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=ss-ws-02
;shadowsocks=example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=ss-ws-tls-01
;shadowsocks=example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, tls13=true, fast-open=false, udp-relay=false, tag=ss-ws-tls-02
;shadowsocks=example.com:80, method=chacha20, password=pwd, fast-open=false, udp-relay=true, udp-over-tcp=true, tag=ss-udp-over-tcp
#
# To disable aead header for vmess, just set aead=false, the default value is true. If your server(V2Ray) version is less than v4.28 please set aead=false
;vmess=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=vmess-01
;vmess=example.com:80, method=aes-128-gcm, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, aead=false, tag=vmess-02
;vmess=example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, fast-open=false, udp-relay=false, tag=vmess-tls-01
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vmess-http
;vmess=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, fast-open=false, udp-relay=false, tag=vmess-tls-02
;vmess=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, tls13=true, fast-open=false, udp-relay=false, tag=vmess-tls-03
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-01
;vmess=192.168.1.1:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-02
;vmess=example.com:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-tls-01
;vmess=192.168.1.1:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vmess-ws-tls-02
;vmess=192.168.1.1:443, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, tls13=true, fast-open=false, udp-relay=false, tag=vmess-ws-tls-03
#
# The method field for vless should be none.
;vless=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=vless-01
;vless=example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, fast-open=false, udp-relay=false, tag=vless-tls-01
;vless=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vless-http
;vless=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, fast-open=false, udp-relay=false, tag=vless-tls-02
;vless=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=over-tls, obfs-host=example.com, tls13=true, fast-open=false, udp-relay=false, tag=vless-tls-03
;vless=example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vless-ws-01
;vless=192.168.1.1:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=ws, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vless-ws-02
;vless=example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vless-ws-tls-01
;vless=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=vless-ws-tls-02
;vless=192.168.1.1:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=wss, obfs-host=example.com, obfs-uri=/ws, tls13=true, fast-open=false, udp-relay=false, tag=vless-ws-tls-03
#
# The obfs field is not supported for http
;http=example.com:80,fast-open=false, udp-relay=false, tag=http-01
;http=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=http-02
;http=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=http-tls-01
;http=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=http-tls-02
;http=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls-alpn=02683208687474702f312e31, fast-open=false, udp-relay=false, tag=http-tls-03
#
;socks5=example.com:80,fast-open=false, udp-relay=false, tag=socks5-01
;socks5=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=socks5-02
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=socks5-tls-01
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=socks5-tls-02
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls-alpn=02683208687474702f312e31, fast-open=false, udp-relay=false, tag=socks5-tls-03
#
# The obfs field is only supported with websocket over tls for trojan. When using websocket over tls you should not set over-tls and tls-host options anymore, instead set obfs=wss and obfs-host options.
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-01
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-02
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-03
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-04
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-cert-sha256=b0088370d6c8e02d6e38c443abf81be2aaf1e18f00435aaf0b39852c338f7aaa, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-05
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-06
;trojan=192.168.1.1:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, tls-alpn=02683208687474702f312e31, tls13=true, fast-open=false, udp-relay=false, tag=trojan-tls-07
;trojan=192.168.1.1:443, password=pwd, obfs=wss, obfs-host=example.com, obfs-uri=/path, udp-relay=true, tag=trojan-wss-05

[filter_local]
;user-agent, ?abc*, proxy
;host, www.google.com, proxy
;host-keyword, adsite, reject
;host-wildcard, *.goo?le.com, proxy
;host-suffix, googleapis.com, proxy
;host-suffix, googleapis.com, proxy, force-cellular
;host-suffix, googleapis.com, proxy, multi-interface
;host-suffix, googleapis.com, proxy, multi-interface-balance
;host-suffix, googleapis.com, proxy, via-interface=pdp_ip0
;ip6-cidr, 2001:4860:4860::8888/32, direct
;ip-cidr, 10.0.0.0/8, direct
;ip-cidr, 127.0.0.0/8, direct
;ip-cidr, 172.16.0.0/12, direct
;ip-cidr, 192.168.0.0/16, direct
;ip-cidr, 224.0.0.0/24, direct
;geoip, cn, direct
;geoip, cn, direct, force-cellular
;ip-asn, 6185, proxy
# You can add below host-keyword rule to skip the DNS query for all the non-matched hosts. Pure IP requests won't be matched by the host related rules.
;host-keyword, ., proxy
final, proxy


#
# The reject returns HTTP status code 404 with no content. This type of rewrite has some kind of dynamic delay (0~5 seconds) mechanism of response for repeated requests in a short period of time. The less the repetition, the shorter the delay (0). The more the repetition, the greater the delay (5).
# The reject-200 returns HTTP status code 200 with no content.
# The reject-img returns HTTP status code 200 with content of 1px gif.
# The reject-dict returns HTTP status code 200 with content of empty json object.
# The reject-array returns HTTP status code 200 with content of empty json array.
# The request-header works for all the http headers not just one single header, so you can match two or more headers including CRLF in one regular expression.
# The echo-response just reply back the body of the content type response for matched URL, the body file should be saved at On My iPhone - Quantumult X - Data.
# The length and encoding related HTTP header fields will be automatically processed by Quantumult if the rewrite is body related, so you should not handle them by yourself. The max supported original response body size is 4 MB(iOS 13+) for script-response-body.
# The body related rewrite will not be executed if the body is empty.
# When using javascript in rewrite, you can use those objects: $request, $response, $notify(title, subtitle, message), console.log(message) and Quantumult's built-in objects all have prefix $.
# Supports: $request.sessionIndex, $request.scheme, $request.method, $request.url, $request.path, $request.headers,$response.sessionIndex, $response.statusCode, $response.headers, $response.body
# The $request.sessionIndex is equal to $response.sessionIndex when the response is related to the request. The sessionIndex has nothing to do with the index of TCP records in the orange Activity panel.
# The $notify(title, subtitle, message) will post iOS notifications if Quantumult notification has been enabled.
# The $prefs is for persistent store: $prefs.valueForKey(key), $prefs.setValueForKey(value, key), $prefs.removeValueForKey(key), $prefs.removeAllValues().
# The console.log(message)  will output logs to Quantumult log file.
# The setTimeout(function() { }, interval) will run function after interval(ms).
# The scripts for script-request-header, script-request-body, script-response-header, script-response-body, script-echo-response and script-analyze-echo-response should be saved in local On My iPhone - Quantumult X - Scripts or iCloud Drive - Quantumult X - Scripts. Samples can be found at https://github.com/crossutility/Quantumult-X
# The difference between script-analyze-echo-response and script-echo-response is that the former will wait for the request body.
#
# The HTTP(HTTPS) request will be matched if the URL and the headers are both matched for the url-and-header rewrite (The URL will be evaluated first, and if it is not matched then the headers will not be evaluated at all). The string of the headers to compare contains the method, path and key-value headers.
#
[rewrite_local]
;^http://example\.com/resource1/1/ url reject
;^http://example\.com/resource1/2/ url reject-img
;^http://example\.com/resource1/3/ url reject-200
;^http://example\.com/resource1/4/ url reject-dict
;^http://example\.com/resource1/5/ url reject-array
;^http://example\.com/resource2/ url 302 http://example.com/new-resource2/
;^http://example\.com/resource3/ url 307 http://example.com/new-resource3/
;^http://example\.com/resource4/ url request-header ^GET /resource4/ HTTP/1\.1(\r\n) request-header GET /api/ HTTP/1.1$1
;^http://example\.com/resource4/ url request-header (\r\n)User-Agent:.+(\r\n) request-header $1User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36$2
;^http://example\.com/resource5/ url request-body info:\[.+\],others request-body info:[],others
;^http://example\.com/resource5/ url response-body info:\[.+\],others response-body info:[],others
;^http://example\.com/resource5/ url echo-response text/html echo-response index.html
;^http://example\.com/resource6/ url script-response-body response-body.js
;^http://example\.com/resource7/ url script-echo-response script-echo.js
;^http://example\.com/resource8/ url script-response-header response-header.js
;^http://example\.com/resource9/ url script-request-header request-header.js
;^http://example\.com/resource10/ url script-request-body request-body.js
;^http://example\.com/resource1/1/ \r\nUser-Agent: example-agent url-and-header reject
;^http://example\.com/resource1/1/ ^POST url-and-header reject


#
# If the require-devices is set, this line of configuration will only be loaded when current Quantumult device ID belongs to the require-devices. The Quantumult device ID can be found in Settings - Misc Settings - About.
# The $task.fetch() compose a HTTP request and deal with the response, only text body is supported. A $task.fetch() can be embeded in the completion handler of another $task.fetch(), if you want serial requests not current requests.
# The scripts should be saved in local On My iPhone - Quantumult X - Scripts or iCloud Drive - Quantumult X - Scripts. Samples can be found at https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
# The default HTTP request timeout is 10 seconds.
#
# Supports 5 or 6 fields of cron excluding the command field. The event-network will be triggered when network changed. The event-interaction will be triggered when user tapped a UIAction. The event related task only can be triggered when the Quantumult X Tunnel is running.
#
[task_local]
;* * * * * sample-task.js
;* * * * * sample-task2.js, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, tag=Sample, enabled=true
;* * * * * sample-task3.js, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, tag=Sample, require-devices=ID1, ID2, enabled=true
;event-network sample-task3.js
;event-interaction sample-task4.js
#
# Just like any web browser, http(s) url string after # is never sent to the server. You can add # to the script http(s) url to append customized params, and using API $environment.sourcePath to get the whole path (https://example.com/sample.js#this-is-not-sent-to-server&key1=value1&key2=value2) and extract the customized params in the script by yourself.
#
;* * * * * https://example.com/sample.js#this-is-not-sent-to-server&key1=value1&key2=value2, tag=Sample, enabled=true


#
# Deploy a local HTTP server and use JavaScript for data processing.
# If the require-devices is set, this line of configuration will only be loaded when current Quantumult device ID belongs to the require-devices. The Quantumult device ID can be found in Settings - Misc Settings - About.
# The input variables are $reqeust.url, $reqeust.path, $reqeust.headers, $reqeust.body
# The output using $done like $done({status:HTTP/1.1 200 OK}, headers:{}, body:here is a string) to sendback the response.
# Further more you can use a signature or any other validation method to verify if the request is legitimate.
# After the deployment you should visit it through http://127.0.0.1:9999/your-path/your-api/.
#
[http_backend]
;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-backend.js, tag=fileConverter, path=^/example/v1/
;preference.js, tag=userPreference, path=^/preference/v1/, img-url=https://example.com, enabled=true
;sample.js, tag=sample, path=^/sample/v1/, require-devices=ID1, ID2, enabled=true
;convert.js, tag=fileConverter, path=^/convert/v1/


#
# If the source IP of the TCP connection is matched by the skip_src_ip, the hostname will not be evaluated. The wildcard * and ? are supported.
# If the destination IP of the TCP connection is matched by the skip_dst_ip, the hostname will not be evaluated. The wildcard * and ? are supported.
# Only the TLS SNI or destination address in hostname will be handled by MitM. The wildcard * and ? are supported.
#
# Important !!! You should always keep your CA passphrase and p12 private.
#
[mitm]
passphrase = D82D7754
p12 = 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
;passphrase =
;p12 =
;skip_validating_cert = false
;skip_src_ip = 192.168.1.5, 192.168.1.6
;skip_dst_ip = 17.0.0.1
;hostname = *.example.com, *.sample.com, non-existed-domain.com, *.non-connected-domain.com
