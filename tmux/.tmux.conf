################################################################
#
# | |_ _ __ ___  _   ___  __
#	| __| '_ ` _ \| | | \ \/ /
#	| |_| | | | | | |_| |>  <
#	 \__|_| |_| |_|\__,_/_/\_\
#
# https://man.openbsd.org/tmux.1
################################################################

################################################################
# [Plugins]
# https://github.com/tmux-plugins/tpm
# Use prefix + I to install plugins
################################################################
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
# Use prefix + Ctrl + s to save tmux status
# Use prefix + Ctrl + r to restore tmux status
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'fabioluciano/tmux-tokyo-night'
run '~/.tmux/plugins/tpm/tpm'

################################################################
# [Global Options]
################################################################
set-option -gq prefix C-x
set-option -gq prefix2 None
set-option -gq repeat-time 1000
set-option -gq default-terminal "xterm-256color"
set-option -gq mouse on
set-option -gq set-clipboard on
set-option -gq set-titles on
set-option -gq allow-passthrough all
set-option -gq monitor-bell off
set-option -gq extended-keys on
set-option -gq visual-bell off
set-option -gq renumber-windows on
set-option -gq base-index 1
set-option -gq wrap-search on
set-option -gq mode-keys vi
set-option -gq status on
set-option -gq status-position bottom
set-option -gq pane-base-index 1
set-option -gq pane-border-lines simple
set-option -gq pane-border-indicators both
set-option -gq pane-border-style 'bg=default fg=#AAFF00'
set-option -gq pane-active-border-style 'bg=default fg=#FF1493 bold'
set-option -gq popup-border-lines rounded
set-option -gq popup-border-style 'bg=default fg=#FF1493 bold'

%if #{==:#{XDG_SESSION_TYPE},wayland}
set-option -gq copy-command 'wl-copy -n'
%elif #{==:#{XDG_SESSION_TYPE},x11}
set-option -gq copy-command 'xclip -i'
%endif

################################################################
# [Bindings]
# C == Ctrl
# M == Alt
# MouseDown1 == right-click
# MouseDown2 == middle-click
# MouseDown3 == Left-click
################################################################
unbind-key -a

bind-key -T sub a new-window -a
bind-key -T sub b new-window -b
bind-key -T sub A command-prompt { new-window -an "%%" }
bind-key -T sub B command-prompt { new-window -bn "%%" }
bind-key -r -T sub h resize-pane -L 1
bind-key -r -T sub j resize-pane -D 1
bind-key -r -T sub k resize-pane -U 1
bind-key -r -T sub l resize-pane -R 1
bind-key -r -T sub Up resize-pane -U 1
bind-key -r -T sub Down resize-pane -D 1
bind-key -r -T sub Left resize-pane -L 1
bind-key -r -T sub Right resize-pane -R 1

bind-key -T root WheelUpPane if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -e }
bind-key -T root MouseDown1Status select-window -t =
bind-key -T root MouseDown3Status display-menu -T "#[align=centre]#{window_index}:#{window_name}" -t = -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l { swap-window -t :-1 } "#{?#{>:#{session_windows},1},,-}Swap Right" r { swap-window -t :+1 } "#{?pane_marked_set,,-}Swap Marked" s { swap-window } '' Kill k { kill-window } Respawn x { respawn-window -k } "#{?pane_marked,Unmark,Mark}" m { select-pane -m } Rename r { command-prompt -F -I "#W" { rename-window -t "#{window_id}" "%%" } } '' "New After" C { new-window -a } "New At End" c { new-window }
bind-key -T root MouseDown1Pane select-pane -t = \; send-keys -M
bind-key -T root MouseDrag1Border resize-pane -M
bind-key -T root MouseDrag1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode }
bind-key -T root DoubleClick1Pane select-pane -t = \; copy-mode -M \; send-keys -X select-word \; if-shell -F "#{==:#{XDG_SESSION_TYPE},wayland}" { send-keys -X copy-pipe-no-clear "wl-copy && wl-paste -n | wl-copy -p" } {if-shell "#{==:#{XDG_SESSION_TYPE},x11}" { send-keys -X copy-pipe-no-clear "xclip -selection clipboard -in" }}
bind-key -T root TripleClick1Pane select-pane -t = \; copy-mode -M \; send-keys -X select-line \; if-shell -F "#{==:#{XDG_SESSION_TYPE},wayland}" { send-keys -X copy-pipe-no-clear "wl-copy && wl-paste -n | wl-copy -p" } {if-shell "#{==:#{XDG_SESSION_TYPE},x11}" { send-keys -X copy-pipe-no-clear "xclip -selection clipboard -in" }}

bind-key -T prefix C-x send-prefix
bind-key -T prefix F1 list-commands
bind-key -T prefix F2 list-keys
bind-key -T prefix F3 show-messages
bind-key -T prefix F4 source-file ~/.tmux.conf
bind-key -T prefix d detach-client
bind-key -T prefix D command-prompt -I "#{server_sessions}" { attach-session -t "%%" } 
bind-key -T prefix w split-window -h -c "#{pane_current_path}"
bind-key -T prefix W split-window -v -c "#{pane_current_path}"
bind-key -T prefix t new-window
bind-key -T prefix C-t switch-client -T sub
bind-key -T prefix T command-prompt { new-window -n "%%" }
bind-key -T prefix C-T switch-client -T sub
bind-key -T prefix n new-session
bind-key -T prefix N command-prompt { new-session -n "%%" }
bind-key -T prefix k confirm-before -p "kill-pane #T? (y/n)" kill-pane
bind-key -T prefix K confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key -T prefix q confirm-before -p "kill-session #S? (y/n)" kill-session
bind-key -T prefix Q confirm-before -p "kill-server? (y/n)" kill-server
bind-key -T prefix r command-prompt -I "#W" { rename-window "%%" }
bind-key -T prefix R command-prompt -I "#S" { rename-session "%%" }
bind-key -r -T prefix \; select-pane -t :.-
bind-key -r -T prefix \' select-pane -t :.+
bind-key -r -T prefix Up select-pane -U
bind-key -r -T prefix Down select-pane -D
bind-key -r -T prefix Left select-pane -L
bind-key -r -T prefix Right select-pane -R
bind-key -r -T prefix [ previous-window
bind-key -r -T prefix ] next-window
bind-key -T prefix 0 command-prompt -I "#W" { select-window -t "%%" }
bind-key -T prefix 1 select-window -t :1
bind-key -T prefix 2 select-window -t :2
bind-key -T prefix 3 select-window -t :3
bind-key -T prefix 4 select-window -t :4
bind-key -T prefix 5 select-window -t :5
bind-key -T prefix 6 select-window -t :6
bind-key -T prefix 7 select-window -t :7
bind-key -T prefix 8 select-window -t :8
bind-key -T prefix 9 select-window -t :9
bind-key -r -T prefix ( switch-client -p
bind-key -r -T prefix ) switch-client -n
bind-key -r -T prefix : swap-pane -d -t -1
bind-key -r -T prefix \" swap-pane -d -t +1
bind-key -r -T prefix \{ swap-window -d -t -1
bind-key -r -T prefix \} swap-window -d -t +1
bind-key -T prefix m command-prompt -T target -p "swap-window #W to: " { swap-window -dt "%%" }
bind-key -T prefix M command-prompt -T target -p "swap-pane #T to: " { join-pane -bt "%%" }
bind-key -T prefix z resize-pane -Z 1
bind-key -T prefix C-z switch-client -T sub
bind-key -r -T prefix M-Up resize-pane -U 1
bind-key -r -T prefix M-Down resize-pane -D 1
bind-key -r -T prefix M-Left resize-pane -L 1
bind-key -r -T prefix M-Right resize-pane -R 1
bind-key -T prefix Space next-layout
bind-key -T prefix c command-prompt
bind-key -T prefix u display-panes -d 0
bind-key -T prefix ? display-message
bind-key -T prefix l choose-tree -Zw
bind-key -T prefix L choose-tree -Zs
bind-key -T prefix a copy-mode
bind-key -T prefix i copy-mode
bind-key -T prefix o copy-mode
bind-key -T prefix y copy-mode \; send-keys -X select-line \; if-shell -F "#{==:#{XDG_SESSION_TYPE},wayland}" { send-keys -X copy-pipe-no-clear "wl-copy && wl-paste -n | wl-copy -p" } {if-shell "#{==:#{XDG_SESSION_TYPE},x11}" { send-keys -X copy-pipe-no-clear "xclip -selection clipboard -in" }}
bind-key -T prefix v copy-mode \; send-keys -X begin-selection
bind-key -T prefix V copy-mode \; send-keys -X select-line
bind-key -T prefix p paste-buffer -p

bind-key -T prefix e split-window -Z -h -c "#{pane_current_path}" yazi
bind-key -T prefix j split-window -Z -h -c "#{pane_current_path}" nvim
bind-key -T prefix h split-window -Z -h -c "#{pane_current_path}" kitty w3m https://duckduckgo.com
bind-key -T prefix b split-window -Z -h -c "#{pane_current_path}" btop
bind-key -T prefix g split-window -Z -h -c "#{pane_current_path}" lazygit
bind-key -T prefix x split-window -Z -h -c "#{pane_current_path}" ipython
bind-key -T prefix s command-prompt -p "trans en:zh "  { display-popup trans "en:zh" "%%" }
bind-key -T prefix S command-prompt -p "trans zh:en "  { display-popup trans "zh:en" "%%" }

#for mode-keys vi
bind-key -T copy-mode-vi q send-keys -X cancel
bind-key -T copy-mode-vi C-c send-keys -X cancel
bind-key -T copy-mode-vi Space send-keys -X clear-selection
bind-key -T copy-mode-vi Escape send-keys -X clear-selection
#Conflict with TripleClick1Pane copy-pipe-no-clear
#bind-key -T copy-mode-vi MouseUp1Pane send-keys -X clear-selection
bind-key -T copy-mode-vi Enter if-shell -F "#{==:#{XDG_SESSION_TYPE},wayland}" { send-keys -X copy-pipe-no-clear "wl-copy && wl-paste -n | wl-copy -p" } { if-shell "#{==:#{XDG_SESSION_TYPE},x11}" { send-keys -X copy-pipe-no-clear "xclip -selection clipboard -in" }}
bind-key -T sub g send-keys -X history-top
bind-key -T copy-mod-vi g switch-client -T sub
bind-key -T copy-mode-vi G send-keys -X history-bottom
bind-key -T copy-mode-vi C-u send-keys -X halfpage-up
bind-key -T copy-mode-vi C-d send-keys -X halfpage-down
bind-key -T copy-mode-vi PPage send-keys -X page-up
bind-key -T copy-mode-vi NPage send-keys -X page-down
bind-key -T copy-mode-vi h send-keys -X cursor-left
bind-key -T copy-mode-vi j send-keys -X cursor-down
bind-key -T copy-mode-vi k send-keys -X cursor-up
bind-key -T copy-mode-vi l send-keys -X cursor-right
bind-key -T copy-mode-vi Up send-keys -X cursor-up
bind-key -T copy-mode-vi Down send-keys -X cursor-down
bind-key -T copy-mode-vi Left send-keys -X cursor-left
bind-key -T copy-mode-vi Right send-keys -X cursor-right
bind-key -T copy-mode-vi 0 send-keys -X start-of-line
bind-key -T copy-mode-vi \$ send-keys -X end-of-line
bind-key -T copy-mode-vi Home send-keys -X start-of-line
bind-key -T copy-mode-vi End send-keys -X end-of-line
bind-key -T copy-mode-vi 1 command-prompt -N -I 1 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi 2 command-prompt -N -I 2 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi 3 command-prompt -N -I 3 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi 4 command-prompt -N -I 4 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi 5 command-prompt -N -I 5 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi 6 command-prompt -N -I 6 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi 7 command-prompt -N -I 7 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi 8 command-prompt -N -I 8 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi 9 command-prompt -N -I 9 -p (repeat) { send-keys -N "%%" }
bind-key -T copy-mode-vi : command-prompt -p "(goto line)" { send-keys -X goto-line "%%" }
bind-key -T copy-mode-vi / command-prompt -T search -p "(search down)" { send-keys -X search-forward "%%" }
bind-key -T copy-mode-vi ? command-prompt -T search -p "(search up)" { send-keys -X search-backward "%%" }
bind-key -T copy-mode-vi n send-keys -X search-again
bind-key -T copy-mode-vi N send-keys -X search-reverse
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi y if-shell -F "#{==:#{XDG_SESSION_TYPE},wayland}" { send-keys -X copy-pipe-no-clear "wl-copy && wl-paste -n | wl-copy -p" } {if-shell "#{==:#{XDG_SESSION_TYPE},x11}" { send-keys -X copy-pipe-no-clear "xclip -selection clipboard -in" }}
bind-key -T copy-mode-vi WheelUpPane send-keys -X -N 1 scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X -N 1 scroll-down
bind-key -T copy-mode-vi MouseDrag1Pane send-keys -X begin-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane if-shell -F "#{==:#{XDG_SESSION_TYPE},wayland}" { send-keys -X copy-pipe-no-clear "wl-copy && wl-paste -n | wl-copy -p" } { if-shell "#{==:#{XDG_SESSION_TYPE},x11}" { send-keys -X copy-pipe-no-clear "xclip -selection clipboard -in" }}
bind-key -T copy-mode-vi DoubleClick1Pane send-keys -X select-word \; if-shell -F "#{==:#{XDG_SESSION_TYPE},wayland}" { send-keys -X copy-pipe-no-clear "wl-copy && wl-paste -n | wl-copy -p" } {if-shell "#{==:#{XDG_SESSION_TYPE},x11}" { send-keys -X copy-pipe-no-clear "xclip -selection clipboard -in" }}
bind-key -T copy-mode-vi TripleClick1Pane send-keys -X select-line \; if-shell -F "#{==:#{XDG_SESSION_TYPE},wayland}" { send-keys -X copy-pipe-no-clear "wl-copy && wl-paste -n | wl-copy -p" } {if-shell "#{==:#{XDG_SESSION_TYPE},x11}" { send-keys -X copy-pipe-no-clear "xclip -selection clipboard -in" }}
